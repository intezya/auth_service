// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/intezya/auth_service/dbschema"
	"github.com/intezya/auth_service/internal/domain/access_level"
	"github.com/intezya/auth_service/internal/infrastructure/ent/account"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accountFields := dbschema.Account{}.Fields()
	_ = accountFields
	// accountDescUsername is the schema descriptor for username field.
	accountDescUsername := accountFields[1].Descriptor()
	// account.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	account.UsernameValidator = accountDescUsername.Validators[0].(func(string) error)
	// accountDescPassword is the schema descriptor for password field.
	accountDescPassword := accountFields[2].Descriptor()
	// account.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	account.PasswordValidator = accountDescPassword.Validators[0].(func(string) error)
	// accountDescAccessLevel is the schema descriptor for access_level field.
	accountDescAccessLevel := accountFields[4].Descriptor()
	// account.DefaultAccessLevel holds the default value on creation for the access_level field.
	account.DefaultAccessLevel = accountDescAccessLevel.Default.(func() access_level.AccessLevel)
	// accountDescCreatedAt is the schema descriptor for created_at field.
	accountDescCreatedAt := accountFields[5].Descriptor()
	// account.DefaultCreatedAt holds the default value on creation for the created_at field.
	account.DefaultCreatedAt = accountDescCreatedAt.Default.(func() time.Time)
}
